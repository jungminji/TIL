/*
  Typography
  $base-font-size: !default
    -> If the variable already has an assignment, it will not be re-assigned
  $leading-scale: is line-height
  $leadinf: the actual height of row */

$base-font-size: 14px !default
$leading-scale: 1.5
$leading: $base-font-size * $leading-scale

// Grid guideline
$grid-height: 100vh
$grid-column-number: 12
// Grid column properties
$column-width: 70px
$column-color: rgba(#fb8989, 0.35)
$gutter-style: 'split'
$gutter-width: 20px
$gutter-half-width: $gutter-width / 2

// page-container width
$container-width: ($column-width + $gutter-width) * $grid-column-number

// Functions
@function col-width-calc($n)
  @return ($column-width * $n) + $gutter-width * ($n - 1)

@function col-offset-calc($n)
  @return col-width-calc($n) + $gutter-width + $gutter-half-width

// Placeholder
%center-box-block {
	text-align: center;

	// 정가운데 정렬을 위한 고스트 가상 요소
	&:before {
		content: "";
		display: inline-block;
		height: 100%;
		vertical-align: middle;

		// 상황에 따라 간격 조정이 요구됨.
		margin-right: -0.25em;
	}

	// 가운데 정렬되는 요소에 적용되는 플레이스홀더 선택자
	// 상황에 따라 width, height 설정 필요
	> div {
		display: inline-block;
		vertical-align: middle;
	}

}


// Mixins
=clearfix
  &::before
    content: ''
    display: table
    clear: both
  &::after
    content: ''
    display: table
    clear: both

// Utility classes
.sr-only
  position: absolute
  width: 1px
  height: 1px
  padding: 0
  margin: -1px
  overflow: hidden
  clip: rect(0,0,0,0)
  border: 0
